apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'


def keystorePropertiesFile = rootProject.file("keystore.properties")
def shouldSign = keystorePropertiesFile.canRead()

def keystoreProperties = new Properties()

if (shouldSign) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}


android {
    if (shouldSign) {
        signingConfigs {
            sign {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            }
        }
    }
    compileSdkVersion 29
    defaultConfig {
        applicationId "ua.gardenapple.itchupdater"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 29
        versionName "1.3.7"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        if (shouldSign) {
            signingConfig signingConfigs.sign
	    }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            debuggable true
            applicationIdSuffix ".debug"
        }
    }
    flavorDimensions "platform"
    productFlavors {
        fdroid {
        }
        itchio {
        }
    }
    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }
    compileOptions {
//        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
        useIR = true
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
//    implementation fileTree(dir: 'libs', include: ['*.jar'])

//    //required for PrettyTime if minSdkVersion < 26
//    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:$rootProject.desugarVersion"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$rootProject.appcompatVersion"
    implementation "com.google.android.material:material:$rootProject.materialVersion"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayoutVersion"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$rootProject.swipeRefreshLayoutVersion"
    implementation "androidx.preference:preference-ktx:$rootProject.preferenceVersion"
    testImplementation "junit:junit:$rootProject.junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$rootProject.androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.androidxEspressoVersion"
    implementation "androidx.work:work-runtime-ktx:$workVersion"

    // Room components
    implementation "androidx.room:room-runtime:$rootProject.roomVersion"
    implementation "androidx.room:room-ktx:$rootProject.roomVersion"
    kapt "androidx.room:room-compiler:$rootProject.roomVersion"
    androidTestImplementation "androidx.room:room-testing:$rootProject.roomVersion"

    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-common-java8:$rootProject.lifecycleVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$rootProject.androidxArchVersion"

    // ViewModel Kotlin support
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.lifecycleVersion"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.coroutinesVersion"

    //Paging
    implementation "androidx.paging:paging-runtime-ktx:$rootProject.pagingVersion"


    // Jsoup
    implementation "org.jsoup:jsoup:$rootProject.jsoupVersion"
    // Glide
    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    kapt "com.github.bumptech.glide:compiler:$rootProject.glideVersion"
    implementation("com.github.bumptech.glide:recyclerview-integration:$rootProject.glideVersion") {
        // Excludes the support library because it's already included by Glide.
        transitive = false
    }
    // OkHttp
    implementation("com.squareup.okhttp3:okhttp:$rootProject.okHttpVersion")
    // FAB Speed Dial
    implementation "com.leinardi.android:speed-dial:$rootProject.speedDialVersion"
    // Material Progress Bar
    implementation "me.zhanghai.android.materialprogressbar:library:$rootProject.materialProgressBarVersion"
    // Colormath (CSS color parsing)
    implementation "com.github.ajalt:colormath:$rootProject.colormathVersion"
    // Fetch
    implementation "androidx.tonyodev.fetch2:xfetch2:$rootProject.fetchAndroidxVersion"
    implementation "androidx.tonyodev.fetch2okhttp:xfetch2okhttp:$rootProject.fetchAndroidxVersion"
//    // PrettyTime
//    implementation "org.ocpsoft.prettytime:prettytime:$rootProject.prettyTimeVersion"
    // Application Crash Reports for Android (ACRA)
    implementation "ch.acra:acra-mail:$rootProject.acraVersion"
    implementation "ch.acra:acra-dialog:$acraVersion"
}
